name: Deploy Java Service to Docker

on:
  push:
    branches:
      - main

env:
  REGISTRY: crpi-4cxmmgs5vgve081u.cn-beijing.personal.cr.aliyuncs.com  # 默认为 docker.io，即去 Docker Hub 上找
  IMAGE_NAME: ${{ github.event.repository.name }}  # 使用 GitHub Actions 提供的能力，可以自动获取仓库名
  IMAGE_TAG: latest  # Docker Image 的 tag，为了方便我直接设置 latest
  PORT: 8080  # 服务要暴露的端口，可以改

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'

    - name: Build with Maven
      run: mvn clean package
      working-directory: ./backend

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        registry: ${{env.REGISTRY}}
        username: 我的校园网卡的批爆
        password: dyw20020304

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Deploy to server
      uses: appleboy/ssh-action@v1
      with:
        host: 182.92.115.169
        username: root
        password: Ye123456
        script: |
          docker stop ${{ env.IMAGE_NAME }} || true
          docker rm ${{ env.IMAGE_NAME }} || true
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker run -p ${{ env.PORT }}:${{ env.PORT}} --name ${{ env.IMAGE_NAME }} -d ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
